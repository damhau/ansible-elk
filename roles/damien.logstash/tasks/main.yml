---
    - name: Add Logstash repo public signing key
      rpm_key: key='https://packages.elasticsearch.org/GPG-KEY-elasticsearch' state=present 
    - name: Add Logstash repository
      template: src=logstash.repo dest=/etc/yum.repos.d/logstash.repo   
    - name: Install Logstash
      yum: name=logstash state=present
    
    - name: Copy /etc/sysconfig/logstash
      template: src=logstash dest=/etc/sysconfig/logstash
    - name: Copy cucm.conf
      template: src=cucm.conf dest=/etc/logstash/conf.d/cucm.conf
    - name: Copy elastic.conf
      template: src=elastic.conf dest=/etc/logstash/conf.d/elastic.conf
    - name: Copy fortigate.conf
      template: src=fortigate.conf dest=/etc/logstash/conf.d/fortigate.conf
    - name: Copy nprobe.conf
      template: src=nprobe.conf dest=/etc/logstash/conf.d/nprobe.conf
    - name: Copy esxi.conf
      template: src=esxi.conf dest=/etc/logstash/conf.d/esxi.conf
      
    - name: Creates templates directory
      file: path=/etc/logstash/templates state=directory

    - name: Copy cucm-cdr.json
      template: src=cucm-cdr.json dest=/etc/logstash/templates/cucm-cdr.json
    - name: Copy cucm-cmr.json
      template: src=cucm-cmr.json dest=/etc/logstash/templates/cucm-cmr.json
    - name: Copy logstash.json
      template: src=logstash.json dest=/etc/logstash/templates/logstash.json
    - name: Copy fortigate.json
      template: src=fortigate.json dest=/etc/logstash/templates/fortigate.json
    - name: Install epel-release
      yum: name=epel-release state=present       
 
    - name: Install zeromq3-devel
      yum: name=zeromq3-devel state=present
 

    - name: Check if Logstash logstash-filter-translate plugin is installed
      shell: ls -l /opt/logstash/vendor/bundle/jruby/1.9/gems/logstash-filter-translate-*/*gemspec
      register: dumpfiles
      ignore_errors: yes
     
    - name: Install Logstash plugin logstash-filter-translate
      command: '/opt/logstash/bin/plugin install logstash-filter-translate'
      when: dumpfiles.stderr.find("cannot") != -1
  
    - name: Open the correct IPTables ports
      lineinfile: dest=/etc/sysconfig/iptables
                  regexp="^-A INPUT -p {{item.protocol}} -m {{item.protocol}} --dport {{item.port}} -j ACCEPT$"
                  line="-A INPUT -p {{item.protocol}} -m {{item.protocol}} --dport {{item.port}} -j ACCEPT"
                  insertafter="^:OUTPUT ACCEPT \[\d*:\d*\]$"
      with_items:
        - { protocol: tcp, port: 1514 }
        - { protocol: udp, port: 1514 }
      notify:
        - Restart iptables    
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6"    
 
    - name: Open the correct IPTables ports with Firewalld
      firewalld: port={{item.port}} permanent=true state=enabled immediate=true
      with_items:
        - { port: 1514/udp }
        - { port: 1514/tcp }
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"      
    
    - name: ensure logstash is running (and automatically at boot time)
      action: service name=logstash state=restarted enabled=yes
   
   
    - name: Load ES Template
      command: 'curl -XPUT http://{{ item }}:9200/_template/logstash -d @/etc/logstash/templates/logstash.json'
      with_items: 
        - "{{ groups['es-vms'] }}"
    - name: Load ES Template
      command: 'curl -XPUT http://{{ item }}:9200/_template/cucm-cdr -d @/etc/logstash/templates/cucm-cdr.json'   
      with_items: 
        - "{{ groups['es-vms'] }}"
    - name: Load ES Template
      command: 'curl -XPUT http://{{ item }}:9200/_template/cucm-cmr -d @/etc/logstash/templates/cucm-cmr.json'
      with_items: 
        - "{{ groups['es-vms'] }}"
    - name: Load ES Template
      command: 'curl -XPUT http://{{ item }}:9200/_template/fortigate -d @/etc/logstash/templates/fortigate.json'
      with_items: 
        - "{{ groups['es-vms'] }}"

      
      


